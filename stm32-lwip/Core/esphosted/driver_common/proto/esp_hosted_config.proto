syntax = "proto3";

message EspHostedCmdGetMacAddress {
    int32 mode = 1;
}

message EspHostedRespGetMacAddress {
    bytes mac = 1;
    int32 resp = 2;
}

message EspHostedCmdGetMode {
}

message EspHostedRespGetMode {
    int32 mode = 1;
    int32 resp = 2;
}

message EspHostedCmdSetMode {
    int32 mode = 1;
}

message EspHostedRespSetMode {
    int32 resp = 1;
}

message EspHostedCmdGetStatus {
}

message EspHostedRespGetStatus {
    int32 resp = 1;
}

message EspHostedCmdSetMacAddress {
    bytes mac = 1;
    int32 mode = 2;
}

message EspHostedRespSetMacAddress {
    int32 resp = 1;
}

enum EspHostedEncryptionMode {
    Type_Open = 0;
    Type_WEP = 1;
    Type_WPA_PSK = 2;
    Type_WPA2_PSK = 3;
    Type_WPA_WPA2_PSK = 4;
    Type_WPA2_ENTERPRISE = 5;
    Type_WPA3_PSK = 6;
    Type_WPA2_WPA3_PSK = 7;
}

message EspHostedCmdGetAPConfig {
}

message EspHostedRespGetAPConfig {
    bytes ssid = 1;
    bytes bssid = 2;
    int32 rssi = 3;
    int32 chnl = 4;
    EspHostedEncryptionMode ecn = 5;
    int32 resp = 6;
}

enum EspHostedStatus {
    TYPE_CONNECTED = 0;
    TYPE_NOT_CONNECTED = 1;
    TYPE_NO_AP_FOUND = 2;
    TYPE_CONNECTION_FAIL = 3;
}

message EspHostedCmdSetAPConfig {
    string ssid = 1;
    string pwd = 2;
    string bssid = 3;
    bool is_wpa3_supported = 4;
    int32 listen_interval = 5;
}

message EspHostedRespSetAPConfig {
    int32 resp = 1;
}

message EspHostedCmdGetSoftAPConfig {
}

message EspHostedRespGetSoftAPConfig {
    bytes ssid = 1;
    bytes pwd = 2;
    int32 chnl = 3;
    EspHostedEncryptionMode ecn = 4;
    int32 max_conn = 5;
    bool ssid_hidden = 6;
    int32 bw = 7;
    int32 resp = 8;
}

message EspHostedCmdSetSoftAPConfig {
    string ssid = 1;
    string pwd = 2;
    int32 chnl = 3;
    EspHostedEncryptionMode ecn = 4;
    int32 max_conn = 5;
    bool ssid_hidden = 6;
    int32 bw = 7;
}

message EspHostedRespSetSoftAPConfig {
    int32 resp = 1;
}

message EspHostedScanResult {
    bytes ssid = 1;
    uint32 chnl = 2;
    int32 rssi = 3;
    bytes bssid = 4;
    EspHostedEncryptionMode ecn = 5;
}

message EspHostedCmdScanResult {
}

message EspHostedRespScanResult {
    uint32 count = 1;
    repeated EspHostedScanResult entries = 2;
    int32 resp = 3;
}

message EspHostedConnectedSTAList {
    bytes mac = 1;
    int32 rssi = 2;
}

message EspHostedCmdConnectedSTA {
}

message EspHostedRespConnectedSTA {
    uint32 num = 1;
    repeated EspHostedConnectedSTAList stations = 2;
    int32 resp = 3;
}

message EspHostedCmdOTABegin {
}

message EspHostedRespOTABegin {
    int32 resp = 1;
}

message EspHostedCmdOTAWrite {
    bytes ota_data = 1;
}

message EspHostedRespOTAWrite {
    int32 resp = 1;
}

message EspHostedCmdOTAEnd {
}

message EspHostedRespOTAEnd {
    int32 resp = 1;
}

enum EspHostedConfigMsgType {
    TypeCmdGetMACAddress = 0;
    TypeRespGetMACAddress = 1;
    TypeCmdGetWiFiMode = 2;
    TypeRespGetWiFiMode = 3;
    TypeCmdSetWiFiMode = 4;
    TypeRespSetWiFiMode = 5;
    TypeCmdGetAPConfig = 6;
    TypeRespGetAPConfig = 7;
    TypeCmdSetAPConfig = 8;
    TypeRespSetAPConfig = 9;
    TypeCmdGetSoftAPConfig = 10;
    TypeRespGetSoftAPConfig = 11;
    TypeCmdSetSoftAPConfig = 12;
    TypeRespSetSoftAPConfig = 13;
    TypeCmdDisconnectAP = 14;
    TypeRespDisconnectAP = 15;
    TypeCmdStopSoftAP = 16;
    TypeRespStopSoftAP = 17;
    TypeCmdGetAPScanList = 18;
    TypeRespGetAPScanList = 19;
    TypeCmdGetConnectedSTAList = 20;
    TypeRespGetConnectedSTAList = 21;
    TypeCmdSetMacAddress = 22;
    TypeRespSetMacAddress = 23;
    TypeCmdSetPowerSaveMode = 24;
    TypeRespSetPowerSaveMode = 25;
    TypeCmdGetPowerSaveMode = 26;
    TypeRespGetPowerSaveMode = 27;
    TypeCmdOTABegin = 28;
    TypeRespOTABegin = 29;
    TypeCmdOTAWrite = 30;
    TypeRespOTAWrite = 31;
    TypeCmdOTAEnd = 32;
    TypeRespOTAEnd = 33;
}

message EspHostedConfigPayload {
    EspHostedConfigMsgType msg = 1;
    oneof payload {
        EspHostedCmdGetMacAddress cmd_get_mac_address = 10;
        EspHostedRespGetMacAddress resp_get_mac_address = 11;
        EspHostedCmdGetMode cmd_get_wifi_mode = 12;
        EspHostedRespGetMode resp_get_wifi_mode = 13;
        EspHostedCmdSetMode cmd_set_wifi_mode = 14;
        EspHostedRespSetMode resp_set_wifi_mode = 15;
        EspHostedCmdGetAPConfig cmd_get_ap_config = 16;
        EspHostedRespGetAPConfig resp_get_ap_config = 17;
        EspHostedCmdSetAPConfig cmd_set_ap_config = 18;
        EspHostedRespSetAPConfig resp_set_ap_config = 19;
        EspHostedCmdGetSoftAPConfig cmd_get_softap_config = 20;
        EspHostedRespGetSoftAPConfig resp_get_softap_config = 21;
        EspHostedCmdSetSoftAPConfig cmd_set_softap_config = 22;
        EspHostedRespSetSoftAPConfig resp_set_softap_config = 23;
        EspHostedCmdGetStatus cmd_disconnect_ap = 24;
        EspHostedRespGetStatus resp_disconnect_ap = 25;
        EspHostedCmdGetStatus cmd_stop_softap = 26;
        EspHostedRespGetStatus resp_stop_softap = 27;
        EspHostedCmdScanResult cmd_scan_ap_list = 28;
        EspHostedRespScanResult resp_scan_ap_list = 29;
        EspHostedCmdConnectedSTA cmd_connected_stas_list = 30;
        EspHostedRespConnectedSTA resp_connected_stas_list = 31;
        EspHostedCmdSetMacAddress cmd_set_mac_address = 32;
        EspHostedRespSetMacAddress resp_set_mac_address = 33;
        EspHostedCmdSetMode cmd_set_power_save_mode = 34;
        EspHostedRespSetMode resp_set_power_save_mode = 35;
        EspHostedCmdGetMode cmd_get_power_save_mode = 36;
        EspHostedRespGetMode resp_get_power_save_mode = 37;
        EspHostedCmdOTABegin cmd_ota_begin = 38;
        EspHostedRespOTABegin resp_ota_begin = 39;
        EspHostedCmdOTAWrite cmd_ota_write = 40;
        EspHostedRespOTAWrite resp_ota_write = 41;
        EspHostedCmdOTAEnd cmd_ota_end = 42;
        EspHostedRespOTAEnd resp_ota_end = 43;
    }
}
